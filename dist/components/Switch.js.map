{"version":3,"sources":["../../src/components/Switch.js"],"names":["Switch","props","absolute","context","getChildLocation","routing","location","pathname","childrens","Children","toArray","children","lastIndex","length","childIndex","parseInt","child","type","WrappedComponent","name","kwargs","getRouteKwargs","path","cloneElement","getRouteLocation","console","error","Component","state"],"mappings":";;;;;;;;AAGA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;+eAPA;;;;;IASMA,M;;;;;;;;;;;2CACiB;AACf,gBAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B,OAAO,CAAC,KAAKC,OAAL,CAAaC,gBAAb,GAA8B,KAAKD,OAAL,CAAaC,gBAAb,EAA9B,GAA8D,EAA/D,KAAsE,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,QAAnB,CAA4BC,QAAzG;;AAE1B,mBAAO,KAAKN,KAAL,CAAWI,OAAX,CAAmBC,QAAnB,CAA4BC,QAAnC;AACH;;;iCAEQ;AACL,gBAAMC,YAAY,gBAAMC,QAAN,CAAeC,OAAf,CAAuB,KAAKT,KAAL,CAAWU,QAAlC,CAAlB;;AAEA,gBAAMC,YAAYJ,UAAUK,MAAV,GAAmB,CAArC;AACA,iBAAK,IAAIC,UAAT,IAAuBN,SAAvB,EAAkC;AAC9B,oBAAIM,aAAaC,SAASD,UAAT,CAAjB;AACA,oBAAIE,QAAQR,UAAUM,UAAV,CAAZ;AACA,oBAAIE,MAAMC,IAAN,CAAWC,gBAAX,CAA4BC,IAA5B,KAAqC,OAAzC,EAAkD;AAC9C,wBAAIlB,QAAQe,MAAMf,KAAlB;;AAEA,wBAAImB,SAAS,KAAKjB,OAAL,CAAakB,cAAb,GAA4B,KAAKlB,OAAL,CAAakB,cAAb,EAA5B,GAA0D,EAAvE;;AAEA,wBAAI,CAACpB,MAAMqB,IAAP,IAAeR,eAAeF,SAAlC,EAA6C;AACzC;AACA,+BAAO,gBAAMW,YAAN,CAAmBP,KAAnB,EAA0B,EAACI,QAAQA,MAAT,EAA1B,CAAP;AACH;;AAED,wBAAI,2BAAa,KAAKI,gBAAL,EAAb,EAAsCvB,MAAMqB,IAA5C,CAAJ,EAAuD;AACnD,+BAAO,gBAAMC,YAAN,CAAmBP,KAAnB,EAA0B,EAACI,QAAQA,MAAT,EAA1B,CAAP;AACH;AAEJ,iBAdD,MAcO;AACHK,4BAAQC,KAAR,CAAc,oCAAd;AACH;AACJ;;AAED,mBAAO,IAAP;AACH;;;;EAlCgB,gBAAMC,S;;AAqC3B,gCAAkB3B,MAAlB;;kBAEe,yBAAQ;AAAA,WAAQ,EAACK,SAASuB,MAAMvB,OAAhB,EAAR;AAAA,CAAR,EAA2CL,MAA3C,C","file":"Switch.js","sourcesContent":["/**\n * Created by sidchik on 28.03.17.\n */\nimport React from 'react';\nimport Route from './Route';\nimport { getRegs, getMatchInfo } from '../helpers/matcher';\nimport { connect } from 'react-redux';\nimport { addRoutingContext } from '../helpers/context';\n\nclass Switch extends React.Component {\n    getRouteLocation() {\n        if (!this.props.absolute) return (this.context.getChildLocation?this.context.getChildLocation():'') || this.props.routing.location.pathname;\n\n        return this.props.routing.location.pathname;\n    }\n\n    render() {\n        const childrens = React.Children.toArray(this.props.children)\n\n        const lastIndex = childrens.length - 1;\n        for (let childIndex in childrens) {\n            let childIndex = parseInt(childIndex);\n            let child = childrens[childIndex];\n            if (child.type.WrappedComponent.name === 'Route') {\n                let props = child.props;\n\n                let kwargs = this.context.getRouteKwargs?this.context.getRouteKwargs():{};\n\n                if (!props.path && childIndex === lastIndex) {\n                    // Not Found Route\n                    return React.cloneElement(child, {kwargs: kwargs});\n                }\n\n                if (getMatchInfo(this.getRouteLocation(), props.path)) {\n                    return React.cloneElement(child, {kwargs: kwargs});\n                }\n\n            } else {\n                console.error('Switch accepts only Route children');\n            }\n        }\n\n        return null;\n    }\n}\n\naddRoutingContext(Switch);\n\nexport default connect(state=>({routing: state.routing}))(Switch);"]}