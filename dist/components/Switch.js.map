{"version":3,"sources":["../../src/components/Switch.js"],"names":["Switch","props","absolute","context","getChildLocation","routing","location","pathname","childrens","Children","toArray","children","lastIndex","length","childIndex","parseInt","child","kwargs","getRouteKwargs","path","cloneElement","getRouteLocation","Component","state"],"mappings":";;;;;;;;AAGA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;+eAPA;;;;;IASMA,M;;;;;;;;;;;2CACiB;AACf,gBAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B,OAAO,CAAC,KAAKC,OAAL,CAAaC,gBAAb,GAAgC,KAAKD,OAAL,CAAaC,gBAAb,EAAhC,GAAkE,EAAnE,KAA0E,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,QAAnB,CAA4BC,QAA7G;;AAE1B,mBAAO,KAAKN,KAAL,CAAWI,OAAX,CAAmBC,QAAnB,CAA4BC,QAAnC;AACH;;;iCAEQ;AACL,gBAAMC,YAAY,gBAAMC,QAAN,CAAeC,OAAf,CAAuB,KAAKT,KAAL,CAAWU,QAAlC,CAAlB;;AAEA,gBAAMC,YAAYJ,UAAUK,MAAV,GAAmB,CAArC;AACA,iBAAK,IAAIC,UAAT,IAAuBN,SAAvB,EAAkC;AAC9B,oBAAIM,aAAaC,SAASD,UAAT,CAAjB;AACA,oBAAIE,QAAQR,UAAUM,UAAV,CAAZ;AACA;AACA,oBAAIb,QAAQe,MAAMf,KAAlB;;AAEA,oBAAIgB,SAAS,KAAKd,OAAL,CAAae,cAAb,GAA8B,KAAKf,OAAL,CAAae,cAAb,EAA9B,GAA8D,EAA3E;;AAEA,oBAAI,CAACjB,MAAMkB,IAAP,IAAeL,eAAeF,SAAlC,EAA6C;AACzC;AACA,2BAAO,gBAAMQ,YAAN,CAAmBJ,KAAnB,EAA0B,EAAEC,QAAQA,MAAV,EAA1B,CAAP;AACH;;AAED,oBAAI,2BAAa,KAAKI,gBAAL,EAAb,EAAsCpB,MAAMkB,IAA5C,CAAJ,EAAuD;AACnD,2BAAO,gBAAMC,YAAN,CAAmBJ,KAAnB,EAA0B,EAAEC,QAAQA,MAAV,EAA1B,CAAP;AACH;;AAED;AACA;AACA;AACH;;AAED,mBAAO,IAAP;AACH;;;;EAlCgB,gBAAMK,S;;AAqC3B,gCAAkBtB,MAAlB;;kBAEe,yBAAQ;AAAA,WAAU,EAAEK,SAASkB,MAAMlB,OAAjB,EAAV;AAAA,CAAR,EAA+CL,MAA/C,C","file":"Switch.js","sourcesContent":["/**\n * Created by sidchik on 28.03.17.\n */\nimport React from 'react';\nimport Route from './Route';\nimport { getRegs, getMatchInfo } from '../helpers/matcher';\nimport { connect } from 'react-redux';\nimport { addRoutingContext } from '../helpers/context';\n\nclass Switch extends React.Component {\n    getRouteLocation() {\n        if (!this.props.absolute) return (this.context.getChildLocation ? this.context.getChildLocation() : '') || this.props.routing.location.pathname;\n\n        return this.props.routing.location.pathname;\n    }\n\n    render() {\n        const childrens = React.Children.toArray(this.props.children)\n\n        const lastIndex = childrens.length - 1;\n        for (let childIndex in childrens) {\n            let childIndex = parseInt(childIndex);\n            let child = childrens[childIndex];\n            // if (child.type.WrappedComponent.name === 'Route') {\n            let props = child.props;\n\n            let kwargs = this.context.getRouteKwargs ? this.context.getRouteKwargs() : {};\n\n            if (!props.path && childIndex === lastIndex) {\n                // Not Found Route\n                return React.cloneElement(child, { kwargs: kwargs });\n            }\n\n            if (getMatchInfo(this.getRouteLocation(), props.path)) {\n                return React.cloneElement(child, { kwargs: kwargs });\n            }\n\n            // } else {\n            //     console.error('Switch accepts only Route children');\n            // }\n        }\n\n        return null;\n    }\n}\n\naddRoutingContext(Switch);\n\nexport default connect(state => ({ routing: state.routing }))(Switch);"]}