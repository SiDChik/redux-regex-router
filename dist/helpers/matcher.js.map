{"version":3,"sources":["../../src/helpers/matcher.js"],"names":["getMatchInfo","getRegs","regsCache","matchCache","keyed","_getMatchInfo","location","pattern","regs","args","kwargs","matchString","childLocation","regIndex","reg","match","substring","length","index","argument","key","push","cacheKey","join","regStrings","split","pop","map","item","exec","text","splice","last","RegExp"],"mappings":"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","file":"matcher.js","sourcesContent":["/**\n * Created by sidchik on 29.03.17.\n */\nlet regsCache = {};\nlet matchCache = {};\n\nconst keyed = /^(\\w+)\\{(.*)\\}$/g;\n\nfunction _getMatchInfo(location, pattern) {\n    let regs = getRegs(pattern);\n    let args = [];\n    let kwargs = {};\n    let matchString = '';\n    let childLocation = location;\n    for (let regIndex in regs) {\n        if (!childLocation) return false;\n        let reg = regs[regIndex];\n        let match = childLocation.match(reg.reg);\n        if (match) {\n            matchString += childLocation.substring(0, match[0].length + match.index);\n            childLocation = childLocation.substring(match[0].length + match.index);\n            if (reg.argument && reg.key) kwargs[reg.key] = match[0];\n            if (reg.argument && !reg.key) args.push(match[0]);\n        } else {\n            return false;\n        }\n    }\n    return {\n        childLocation: childLocation,\n        args: args,\n        kwargs: kwargs,\n        matchString: matchString,\n    }\n}\n\nexport function getMatchInfo(location, pattern) {\n    const cacheKey = [location, pattern].join('::');\n    if (matchCache[cacheKey]) return matchCache[cacheKey];\n\n    matchCache[cacheKey] = _getMatchInfo(location, pattern);\n    return matchCache[cacheKey];\n}\n\nexport function getRegs(pattern) {\n    if (!regsCache[pattern]) {\n        let regStrings = pattern.split(/[\\(\\)]/);\n        if (!regStrings[regStrings.length - 1]) {\n            regStrings.pop();\n        }\n\n        regStrings = regStrings.map((item, index) => {\n            let match = keyed.exec(item);\n            let text = item, key;\n            if (match) {\n                key = match[1];\n                text = match[2];\n            }\n            return {\n                text: text,\n                key: key,\n                argument: index % 2\n            }\n        });\n\n        if (regStrings.length > 1 && regStrings[0].text === '^') {\n            regStrings.splice(0, 1);\n            regStrings[0].text = '^' + regStrings[0].text;\n        }\n\n        if (regStrings.length > 1 && regStrings[regStrings.length - 1].text === '$') {\n            regStrings.pop();\n            let last = regStrings.pop();\n            last.text += '$';\n            regStrings.push(last);\n        }\n\n        // let lastIndex = regStrings.length - 1;\n        regsCache[pattern] = regStrings.map((item, index) => {\n\n            item.reg = new RegExp((index > 0 ? '^' : '') + item.text);\n            return item;\n        });\n    }\n    return regsCache[pattern];\n}"]}